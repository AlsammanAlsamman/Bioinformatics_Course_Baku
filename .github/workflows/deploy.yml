# .github/workflows/deploy.yml

name: Deploy Quarto Book to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Define the job
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # 1. Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Set up Quarto
      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        # Optional: specify a Quarto version, or defaults to latest
        # with:
        #   version: 1.4.549 # Example version

      # 3. Set up R
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release' # Use the latest release version of R

      # 4. Install R Dependencies
      #    Option 1: Use r-lib/actions (recommended if you have a DESCRIPTION file or use pak)
      # - name: Install R Dependencies (using pak)
      #   uses: r-lib/actions/setup-r-dependencies@v2
      #   with:
      #     packages: |
      #       any::tidyverse
      #       any::readxl
      #       any::writexl
      #       any::rrBLUP
      #       any::qqman
      #       any::vcfR
      #       any::reshape2
      #       # Add any other R packages used in your .qmd files here
      #       # Using 'any::' installs from CRAN, Bioconductor, etc. via pak


      # 5. Render Quarto Book
      #    This assumes your _quarto.yml specifies 'output-dir: output'
      #    The rendered HTML book will be in 'output/_book/'
      - name: Render Quarto Book
        run: quarto render
        shell: bash

      # 6. Upload GitHub Pages artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the rendered book output directory
          path: 'output/_book/' # Make sure this matches your quarto output path

      # 7. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # This action automatically deploys the artifact uploaded in the previous step
